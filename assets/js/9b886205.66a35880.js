"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[852],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return d}});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function u(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):u(u({},t),e)),r},l=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),f=c(r),d=i,g=f["".concat(s,".").concat(d)]||f[d]||p[d]||o;return r?n.createElement(g,u(u({ref:t},l),{},{components:r})):n.createElement(g,u({ref:t},l))}));function d(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,u=new Array(o);u[0]=f;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a.mdxType="string"==typeof e?e:i,u[1]=a;for(var c=2;c<o;c++)u[c]=r[c];return n.createElement.apply(null,u)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},7129:function(e,t,r){r.r(t),r.d(t,{assets:function(){return l},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return a},metadata:function(){return c},toc:function(){return p}});var n=r(7462),i=r(3366),o=(r(7294),r(3905)),u=["components"],a={},s="Reproducing failures",c={unversionedId:"tutorials/testing/fuzzing/reproducing-failures",id:"tutorials/testing/fuzzing/reproducing-failures",title:"Reproducing failures",description:"An important aspect of developing code with a fuzz testing suite, is how to reproduce failing test",source:"@site/docs/tutorials/07-testing/03-fuzzing/reproducing-failures.md",sourceDirName:"tutorials/07-testing/03-fuzzing",slug:"/tutorials/testing/fuzzing/reproducing-failures",permalink:"/protostar/docs/tutorials/testing/fuzzing/reproducing-failures",editUrl:"https://github.com/software-mansion/protostar/tree/master/website/docs/tutorials/07-testing/03-fuzzing/reproducing-failures.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorials",previous:{title:"Fuzzing",permalink:"/protostar/docs/tutorials/testing/fuzzing/"}},l={},p=[{value:"Reproducing a test run with seed",id:"reproducing-a-test-run-with-seed",level:2}],f={toc:p};function d(e){var t=e.components,r=(0,i.Z)(e,u);return(0,o.kt)("wrapper",(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"reproducing-failures"},"Reproducing failures"),(0,o.kt)("p",null,"An important aspect of developing code with a fuzz testing suite, is how to reproduce failing test\ncases.\nAs for now, Protostar provides one mean of achieving this."),(0,o.kt)("h2",{id:"reproducing-a-test-run-with-seed"},"Reproducing a test run with seed"),(0,o.kt)("p",null,"When a test suite with fuzz test is run, Protostar will print out a numeric seed of a pseudo-random\nnumber generator used as a source of generated examples:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"17:15:36 [INFO] Test suites: 1 failed, 1 total            \n17:15:36 [INFO] Tests:       1 failed, 1 total\n17:15:36 [INFO] Seed:        3658430058\n")),(0,o.kt)("p",null,"You can then recreate that test suite run with\nthe ",(0,o.kt)("a",{parentName:"p",href:"/protostar/docs/cli-reference#--seed-int"},(0,o.kt)("inlineCode",{parentName:"a"},"--seed")," CLI flag"),"."))}d.isMDXComponent=!0}}]);