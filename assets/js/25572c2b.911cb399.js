"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[310],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return u}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),m=l(n),u=r,g=m["".concat(c,".").concat(u)]||m[u]||p[u]||i;return n?a.createElement(g,o(o({ref:t},d),{},{components:n})):a.createElement(g,o({ref:t},d))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5360:function(e,t,n){n.d(t,{Z:function(){return k}});var a=n(7294),r=n(9960),i=n(3725),o=n(6010),s="cardContainer_woeA",c="cardContainerLink_iOSj",l="cardTitle_pNjP",d="cardDescription_qC_k",p=n(3919),m=n(5999);function u(e){var t=e.href,n=e.children,i=(0,o.Z)("card margin-bottom--lg padding--lg",s,t&&c);return t?a.createElement(r.Z,{href:t,className:i},n):a.createElement("div",{className:i},n)}function g(e){var t=e.href,n=e.icon,r=e.title,i=e.description;return a.createElement(u,{href:t},a.createElement("h2",{className:(0,o.Z)("text--truncate",l),title:r},n," ",r),a.createElement("div",{className:(0,o.Z)("text--truncate",d),title:i},i))}function h(e){var t=e.item,n=(0,i.Wl)(t);return a.createElement(g,{href:n,icon:"\ud83d\uddc3\ufe0f",title:t.label,description:(0,m.I)({message:"{count} items",id:"theme.docs.DocCard.categoryDescription",description:"The default description for a category card in the generated index about how many items this category includes"},{count:t.items.length})})}function f(e){var t,n=e.item,r=(0,p.Z)(n.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",o=(0,i.xz)(null!=(t=n.docId)?t:void 0);return a.createElement(g,{href:n.href,icon:r,title:n.label,description:null==o?void 0:o.description})}function v(e){var t=e.item;switch(t.type){case"link":return a.createElement(f,{item:t});case"category":return a.createElement(h,{item:t});default:throw new Error("unknown item type "+JSON.stringify(t))}}function k(e){var t=e.items;return a.createElement("div",{className:"row"},t.map((function(e,t){return a.createElement("article",{key:t,className:"col col--6"},a.createElement(v,{item:e}))})))}},6446:function(e,t,n){n.r(t),n.d(t,{assets:function(){return m},contentTitle:function(){return d},default:function(){return h},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return u}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),o=n(5360),s=n(3725),c=["components"],l={sidebar_label:"Migrations"},d="Migrations",p={unversionedId:"tutorials/deploying/migrations/README",id:"tutorials/deploying/migrations/README",title:"Migrations",description:"Breaking changes can be introduced without deprecation. StarkNet deployment flow can change, so Protostar will follow in the future.",source:"@site/docs/tutorials/06-deploying/02-migrations/README.md",sourceDirName:"tutorials/06-deploying/02-migrations",slug:"/tutorials/deploying/migrations/",permalink:"/protostar/docs/tutorials/deploying/migrations/",editUrl:"https://github.com/software-mansion/protostar/tree/master/website/docs/tutorials/06-deploying/02-migrations/README.md",tags:[],version:"current",frontMatter:{sidebar_label:"Migrations"},sidebar:"tutorials",previous:{title:"CLI",permalink:"/protostar/docs/tutorials/deploying/cli"},next:{title:"call",permalink:"/protostar/docs/tutorials/deploying/migrations/call"}},m={},u=[{value:"Creating a migration file",id:"creating-a-migration-file",level:2},{value:"Migration file structure",id:"migration-file-structure",level:2},{value:"Running the migration",id:"running-the-migration",level:2},{value:"Lack of Atomicity",id:"lack-of-atomicity",level:2},{value:"Signing the migration",id:"signing-the-migration",level:2},{value:"Available migration cheatcodes",id:"available-migration-cheatcodes",level:2}],g={toc:u};function h(e){var t=e.components,n=(0,r.Z)(e,c);return(0,i.kt)("wrapper",(0,a.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"migrations"},"Migrations"),(0,i.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Breaking changes can be introduced without deprecation. StarkNet ",(0,i.kt)("a",{parentName:"p",href:"https://community.starknet.io/t/universal-deployer-contract-proposal/1864"},"deployment flow can change"),", so Protostar will follow in the future."))),(0,i.kt)("p",null,"Migrations are Cairo files that help you manage contracts on the StarkNet.\nThese files are responsible for staging your deployment tasks, and they're written under the assumption that your project uses ",(0,i.kt)("a",{parentName:"p",href:"https://blog.openzeppelin.com/proxy-patterns/"},"Proxy Pattern"),".\nAs your project evolves, you'll create new migration scripts to reflect this evolution on the Starknet.\nTo interact with StarkNet, you can use ",(0,i.kt)("a",{parentName:"p",href:"#available-migration-cheatcodes"},"migration cheatcodes"),". "),(0,i.kt)("h2",{id:"creating-a-migration-file"},"Creating a migration file"),(0,i.kt)("p",null,"You can create a migration file anywhere, but we recommend creating them inside a ",(0,i.kt)("inlineCode",{parentName:"p"},"migrations")," directory. Currently, Protostar doesn't enforce any naming convention for migration files. In this tutorial we use a naming convention: ",(0,i.kt)("inlineCode",{parentName:"p"},"migration_NUMBER_TITLE.cairo"),", for example ",(0,i.kt)("inlineCode",{parentName:"p"},"migration_01_init.cairo"),"."),(0,i.kt)("h2",{id:"migration-file-structure"},"Migration file structure"),(0,i.kt)("p",null,"Each migration should have 2 functions: ",(0,i.kt)("inlineCode",{parentName:"p"},"up")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"down"),". The ",(0,i.kt)("inlineCode",{parentName:"p"},"up")," function is responsible to migrate your project forward, and the ",(0,i.kt)("inlineCode",{parentName:"p"},"down")," function is executed to rollback changes. These functions must be decorated with ",(0,i.kt)("inlineCode",{parentName:"p"},"@external")," decorator."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cairo",metastring:'title="Deploying storage and logic contracts"',title:'"Deploying',storage:!0,and:!0,logic:!0,'contracts"':!0},'%lang starknet\n\n@external\nfunc up() {\n    %{\n        logic_contract_address = deploy_contract("./build/main.json").contract_address\n        storage_contract_address = deploy_contract("./build/proxy.json", [logic_contract_address]).contract_address\n    %}\n    return ();\n}\n\n@external\nfunc down() {\n    %{ assert False, "Not implemented" %}\n    return ();\n}\n')),(0,i.kt)("h2",{id:"running-the-migration"},"Running the migration"),(0,i.kt)("p",null,"To run the migration execute the ",(0,i.kt)("inlineCode",{parentName:"p"},"migrate")," command. We recommend specifying the migration output directory to save class hashes and contract addresses."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="Running the migration to the testnet"',title:'"Running',the:!0,migration:!0,to:!0,'testnet"':!0},"protostar migrate migrations/migration_01_init.cairo\n    --network testnet\n    --output-dir migrations/testnet\n")),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Run ",(0,i.kt)("inlineCode",{parentName:"p"},"protostar migrate --help")," to display all parameters supported by this command."))),(0,i.kt)("p",null,"Protostar asks, if you build the project to prevent you from running the migration on an outdated build output."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text",metastring:"title=\"Type 'y' to continue\"",title:'"Type',"'y'":!0,to:!0,'continue"':!0},"Did you build the project before running this command? [y/n]: \n")),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Run ",(0,i.kt)("inlineCode",{parentName:"p"},"protostar migrate")," with the ",(0,i.kt)("inlineCode",{parentName:"p"},"--no-confirm")," flag to skip this check."))),(0,i.kt)("p",null,"If you build the project, Protostar will print migration logs in the command line."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="You can use this output for the debugging purposes"',title:'"You',can:!0,use:!0,this:!0,output:!0,for:!0,the:!0,debugging:!0,'purposes"':!0},"[INFO] (Protostar \u2192 StarkNet) DECLARE\n  contract             /.../protostar/playground/standard/build/main.json\n  sender_address       1\n  max_fee              0\n  version              0\n  signature            []\n  nonce                0\n[INFO] (Protostar \u2190 StarkNet) DECLARE\n  code                 TRANSACTION_RECEIVED\n  class_hash           123456...\n  transaction_hash     0x1234...\n[INFO] Migration completed\n")),(0,i.kt)("h2",{id:"lack-of-atomicity"},"Lack of Atomicity"),(0,i.kt)("p",null,"If one of the cheatcode fails (e.g. ",(0,i.kt)("a",{parentName:"p",href:"migrations/invoke"},"invoke cheatcode"),"), introduced changes won't be reverted."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cairo"},'%lang starknet\n\n@external\nfunc up() { \n    %{ \n        # this deploy won\'t be reverted\n        logic_contract_address = deploy_contract("./build/main.json").contract_address\n\n        # if this deploy fails\n        storage_contract_address = deploy_contract("./build/proxy.json", [logic_contract_address]).contract_address \n    %}\n    return ();\n}\n\nIf atomicity is essential and you need only to use deploy and invoke transactions, consider using [Contract Classes](https://docs.starknet.io/documentation/develop/Contracts/contract-classes/).\n')),(0,i.kt)("h2",{id:"signing-the-migration"},"Signing the migration"),(0,i.kt)("p",null,"You can sign the migration's transactions by providing appropriate arguments to the CLI of the command.\nSee signing-related documentation ",(0,i.kt)("a",{parentName:"p",href:"/protostar/docs/tutorials/deploying/cli#signing-a-declaration"},"here"),"."),(0,i.kt)("p",null,"For now, declare and invoke migration calls are signed automatically when provided with appropriate arguments."),(0,i.kt)("h2",{id:"available-migration-cheatcodes"},"Available migration cheatcodes"),(0,i.kt)(o.Z,{items:(0,s.jA)().items,mdxType:"DocCardList"}))}h.isMDXComponent=!0}}]);